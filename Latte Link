<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LatteLink Check-In</title>
    <!-- Tailwind CSS for easy styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        /* Custom styles for a better look, using Inter font */
        body {
            font-family: "Inter", sans-serif;
            background-color: #f3f4f6; /* Light gray background */
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh; /* Make sure it takes full height of the screen */
            margin: 0;
            padding: 20px; /* Add some padding on smaller screens */
            box-sizing: border-box; /* Include padding in element's total width and height */
        }
        .container {
            background-color: #ffffff; /* White background for the form */
            padding: 32px; /* More padding inside the box */
            border-radius: 16px; /* Nicely rounded corners */
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1); /* Soft shadow */
            width: 100%;
            max-width: 400px; /* Max width for larger screens */
            text-align: center;
        }
        input[type="text"], /* Changed from email/tel/number to just text for flexibility */
        input[type="number"] {
            width: 100%;
            padding: 12px;
            margin-bottom: 16px;
            border: 1px solid #d1d5db; /* Light gray border */
            border-radius: 8px; /* Rounded input fields */
            font-size: 16px;
            box-sizing: border-box; /* Important for padding/width */
        }
        button {
            width: 100%;
            padding: 14px;
            background-color: #4f46e5; /* Indigo button color */
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 18px;
            font-weight: bold;
            cursor: pointer;
            transition: background-color 0.3s ease; /* Smooth color change on hover */
        }
        button:hover {
            background-color: #4338ca; /* Darker indigo on hover */
        }
        button:disabled {
            background-color: #9ca3af; /* Gray when disabled */
            cursor: not-allowed;
        }
        #message {
            margin-top: 20px;
            padding: 15px;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 500;
            color: #333;
            background-color: #e0f2fe; /* Light blue for messages */
            border: 1px solid #90cdf4; /* Blue border */
        }
        #loadingSpinner {
            border: 4px solid rgba(0, 0, 0, 0.1);
            border-left-color: #4f46e5;
            border-radius: 50%;
            width: 24px;
            height: 24px;
            animation: spin 1s linear infinite;
            display: none; /* Hidden by default */
            margin: 0 auto 10px; /* Center it */
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="text-3xl font-extrabold text-gray-900 mb-6">â˜• LatteLink</h1>
        <p class="text-gray-600 mb-8">Scan QR & Check-In for your coffee rewards!</p>

        <form id="checkInForm">
            <div class="mb-4">
                <label for="emailOrPhone" class="block text-left text-sm font-medium text-gray-700 mb-1">Your Email or Phone:</label>
                <input type="text" id="emailOrPhone" name="emailOrPhone" placeholder="e.g., your@email.com or 0412345678" required>
            </div>
            <div class="mb-6">
                <label for="staffPin" class="block text-left text-sm font-medium text-gray-700 mb-1">Staff PIN (6 digits):</label>
                <input type="number" id="staffPin" name="staffPin" placeholder="Ask staff for the PIN" required pattern="\d{6}" maxlength="6">
            </div>
            <button type="submit" id="checkInButton">
                Check In My Coffee!
            </button>
            <div id="loadingSpinner" class="mt-4"></div>
        </form>

        <div id="message" class="hidden">
            <!-- Messages from the robot will appear here -->
        </div>
    </div>

    <script>
        // --- IMPORTANT: REPLACE THIS URL WITH YOUR GOOGLE APPS SCRIPT WEB APP URL ---
        // This is the URL you copied after deploying your LatteLink Backend Apps Script.
        // It should look like: 'https://script.google.com/macros/s/AKfycBx.../exec'
        const APPS_SCRIPT_WEB_APP_URL = 'YOUR_APPS_SCRIPT_WEB_APP_URL_HERE'; // <--- PASTE YOUR URL HERE!

        // Get references to elements on our page
        const form = document.getElementById('checkInForm');
        const emailOrPhoneInput = document.getElementById('emailOrPhone');
        const staffPinInput = document.getElementById('staffPin');
        const checkInButton = document.getElementById('checkInButton');
        const messageDiv = document.getElementById('message');
        const loadingSpinner = document.getElementById('loadingSpinner');

        // Function to show messages to the customer
        function showMessage(text, isError = false) {
            messageDiv.textContent = text;
            messageDiv.classList.remove('hidden'); // Make sure the message box is visible
            if (isError) {
                messageDiv.classList.remove('bg-blue-100', 'border-blue-300');
                messageDiv.classList.add('bg-red-100', 'border-red-300', 'text-red-800'); // Red for errors
            } else {
                messageDiv.classList.remove('bg-red-100', 'border-red-300', 'text-red-800');
                messageDiv.classList.add('bg-blue-100', 'border-blue-300'); // Blue for success/info
            }
        }

        // Function to hide messages
        function hideMessage() {
            messageDiv.classList.add('hidden');
            messageDiv.textContent = '';
        }

        // Function to show/hide loading spinner and disable button
        function setLoading(isLoading) {
            if (isLoading) {
                loadingSpinner.style.display = 'block'; // Show spinner
                checkInButton.disabled = true; // Disable button
                checkInButton.textContent = 'Checking In...';
                hideMessage(); // Hide any previous messages
            } else {
                loadingSpinner.style.display = 'none'; // Hide spinner
                checkInButton.disabled = false; // Enable button
                checkInButton.textContent = 'Check In My Coffee!';
            }
        }

        // What happens when the customer clicks the "Check In" button
        form.addEventListener('submit', async (event) => {
            event.preventDefault(); // Stop the page from refreshing (important!)

            setLoading(true); // Show loading spinner and disable button

            const emailOrPhone = emailOrPhoneInput.value;
            const staffPin = staffPinInput.value;

            // Prepare the data to send to our robot (Apps Script)
            const formData = new FormData();
            formData.append('emailOrPhone', emailOrPhone);
            formData.append('staffPin', staffPin); // Sending the PIN, but robot doesn't check it yet

            try {
                // Send the data to our Apps Script robot!
                const response = await fetch(APPS_SCRIPT_WEB_APP_URL, {
                    method: 'POST', // We are SENDING data
                    body: formData // The data we prepared
                });

                // Get the answer back from the robot
                const data = await response.json();

                if (data.success) {
                    showMessage(data.message, false); // Show success message
                    // Optionally clear inputs after successful check-in
                    emailOrPhoneInput.value = '';
                    staffPinInput.value = '';
                } else {
                    showMessage(data.message, true); // Show error message
                }

            } catch (error) {
                // If something goes wrong with sending or receiving data
                console.error('Error during fetch:', error);
                showMessage('Network error or problem connecting. Please try again!', true);
            } finally {
                setLoading(false); // Hide loading spinner and enable button
            }
        });
    </script>
</body>
</html>
